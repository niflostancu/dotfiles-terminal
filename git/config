[core]
	# Global ignore list (copy globalignore.example)
	excludesfile = ~/.config/git/globalignore.local
	pager = less -FXRS -x2
	editor = vim
	whitespace = cr-at-eol
	autocrlf = input

# Hint: add this to a file named "config.local"
#[user]
#	name = Your Name
#	email = your@email.com

[alias]
	s = status --short
	ss  = status
	diff = diff --ignore-space-at-eol -b -w --ignore-blank-lines
	cnv = commit --no-verify
	pnv = push --no-verify
	co = checkout
	cob = checkout -b
	br = branch -v
	# list all aliases
	la = "!git config -l | grep alias | cut -c 7-"

	# rebase commands
	cont = rebase --continue
	conf = "!git s | grep ^U"

	# short log
	l = log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)%an%C(reset) - %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative

	# show all deleted files in the repo
	deleted = "!git log --diff-filter=D --summary | grep delete"

	# submodule shortcuts
	subi = submodule init
	subu = submodule update
	sub = "!git submodule sync && git submodule update"

	undo = reset --soft HEAD~1

	amend = commit --amend

	cleanup = "!git remote prune origin && git gc && git clean -df && git stash clear"

	# show the last tag
	lt = describe --tags --abbrev=0

	# assume aliases
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"

	# show the most recently touched branches
	recent = "!git for-each-ref --sort='-committerdate' --format='%(color:red)%(refname)%(color:reset)%09%(committerdate)' refs/heads | sed -e 's-refs/heads/--' | less -XFR"

	# grep commands
	# 'diff grep'
	dg = "!sh -c 'git ls-files -m | grep $1 | xargs git diff' -"
	# diff grep changes between two commits
	dgc = "!sh -c 'git ls-files | grep $1 | xargs git diff $2 $3 -- ' -"
	# 'checkout grep'
	cg = "!sh -c 'git ls-files -m | grep $1 | xargs git checkout ' -"
	# add grep
	ag = "!sh -c 'git ls-files -m -o --exclude-standard | grep $1 | xargs git add --all' -"
	# add all
	aa = !git ls-files -d | xargs git rm && git ls-files -m -o --exclude-standard | xargs git add
	# remove grep - Remove found files that are NOT under version control
	rg = "!sh -c 'git ls-files --others --exclude-standard | grep $1 | xargs rm' -"

[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = auto

[push]
	# push to remote branch of the same name by default
	default = current

[branch]
	# set up 'git pull' to rebase instead of merge
	autosetuprebase = always

[diff]
	# detect renamed + copied files
	renames = copies
	mnemonicprefix = true
[difftool]
	prompt = false

[apply]
	# do not warn about missing whitespace at EOF
	whitespace = nowarn

[rerere]
	# Enable recording of resolved conflicts
	enabled = true

[grep]
	extendRegexp = true
	lineNumber = true

[credential]
	# cache credentials in memory
	helper = cache --timeout=1800

[merge]
	tool = vimdiff
	conflictstyle = diff3
[mergetool "vimdiff"]
	cmd = nvim -d $BASE $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'

[pager]
	diff = "diff-so-fancy | less --tabs=4 -RFX"
	show = "diff-so-fancy | less --tabs=4 -RFX"

[include]
	# Include local overrides
	path = config.local

